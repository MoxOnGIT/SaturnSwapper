@using Saturn.Backend.Data.Variables

<div class="tab-page" id="plus-page" style="display: none">
    @if (Constants.isPlus)
    {
        <div class="section vertical" id="user-settings">
            <h1>What is this?</h1>
            <h2>Congrats! If you see this, you have access to Saturn+! You can configure your Saturn+ settings here.</h2>
        </div>

        <div class="section vertical" id="swapper-settings">
            <button @onclick="@(async () => await ToggleGlobalSwaps())">
                @("Toggle Global Swaps: " + (Constants.ShouldGlobalSwap ? "On" : "Off"))
            </button>
        </div>
    }
    else
    {
        <div class="section vertical">
            <h1>Saturn+</h1>
            <h2>This tab is only for Saturn+ members. Click the button below to join!</h2>
            <button onclick="saturn.modalManager.showModal('plus')">Join Saturn+</button>
        </div>
        
        <div class="section vertical">
            <h1>What's Saturn+</h1>
            <h2>Saturn+ is the subscription service related to the swapper. You can gain access to it by clicking the button above and going through one of the given paths.</h2>
        </div>
        
        <div class="section vertical">
            <h1>What's Included With Saturn+</h1>
            <h2>- No key required to use the swapper</h2>
            <h2>- No key required to use plugins</h2>
            <h2>- Global Swaps [Swaps EVERYONE can see it in the lobby and in UEFN games (GOING IN UEFN IS BANNABLE!)]</h2>
            <h2>- No Item Swaps [Swaps from NO ITEM and EVERYONE can see it in the lobby and in UEFN games (GOING IN UEFN IS BANNABLE!)]</h2>
            <h2>- Beta Updates [Test new features before anyone else]</h2>
        </div>
    }
</div>

@code {
    private async Task ChangeState()
    {
        while (true)
        {
            StateHasChanged();
            await Task.Delay(500);
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        ChangeState();
    }

    private async Task ToggleGlobalSwaps()
    {
        Constants.ShouldGlobalSwap = !Constants.ShouldGlobalSwap;
        Constants.ShouldLobbySwap = false;
    }

    private async Task ToggleLobbySwaps()
    {
        Constants.ShouldLobbySwap = !Constants.ShouldLobbySwap;
        Constants.ShouldGlobalSwap = false;
    }
}